---
- name: "Create {{ general_user }} user"
  user:
    name: "{{ general_user }}"
    password: "{{ general_password }}"
    create_home: yes
    state: "present"
  become: yes

- name: "Add boot configurations"
  template:
    src: "config.txt.j2"
    dest: "/boot/config.txt"
    mode: "0755"
  become: yes

- name: "Copy and install argon"
  block:
    - tempfile: suffix="argon" state="directory"
      register: tempdir
    - copy: src="argon1_0.2.1_all.deb" dest="{{ tempdir.path }}/argon1.deb" mode="0600"
    - copy: src="lxplug-argon1_0.2.1_armhf.deb" dest="{{ tempdir.path }}/lxplug-argon1.deb" mode="0600"
    - apt: deb="{{ tempdir.path }}/argon1.deb"
    - apt: deb="{{ tempdir.path }}/lxplug-argon1.deb"
  always:
    - file: path="{{ tempdir.path }}" state="absent"
  become: yes

- name: "Disable fan until 55"
  lineinfile:
    path: "/etc/argonone.yaml"
    regexp: '50:'
    state: "absent"
  become: yes

- name: "Start and enable argon"
  systemd:
    name: "argonone"
    state: "restarted"
    enabled: yes
    daemon_reload: yes
  become: yes

- name: "Set authorized key from local user"
  block:
    - stat: path="~/.ssh/raspberry_id_rsa.pub"
      register: raspberry_pi_key
    - authorized_key: user="{{ general_user }}" key="{{ lookup('file', '~/.ssh/raspberry_id_rsa.pub') }}" state="present"
      when: raspberry_pi_key is defined and raspberry_pi_key.stat.islnk is defined
  become: yes

- name: "Set SSHD settings"
  template:
    src: "sshd_config.j2"
    dest: "/etc/ssh/sshd_config"
    mode: "0644"
  notify: "Reload SSH"
  become: yes

- name: "Start and enable SSH"
  systemd:
    name: "ssh"
    state: "restarted"
    enabled: yes
  become: yes

- name: "Install utilities"
  apt:
    name:
      - "ntfs-3g"
      - "ansible"
      - "firefox-esr"
      - "git"
      - "borgbackup"
  become: yes

- name: "Generate SSH keys"
  user:
    name: "{{ item.owner }}"
    generate_ssh_key: yes
    ssh_key_file: ".ssh/{{ item.service }}_id"
    ssh_key_type: "{{ item.type }}"
    ssh_key_passphrase: "{{ item.passphrase }}"
    ssh_key_comment: "{{ item.owner }}@{{ item.service }}"
  with_items: "{{ general_ssh_keys }}"
  no_log: yes
